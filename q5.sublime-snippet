<snippet>
    <content><![CDATA[
import * as Types from "../variables/actionTypes";
import callApiCms from "./../utils/callApiCms";
import { actFetchResourceSuccess, actFetchResourceFail } from "./fetch.action";
import { renderErrorSever } from "../utils/renderError";
export const actUpdate${2:${1/(.+)/\u$1/g}}Request = (
  ${1:${TM_FILENAME/\..*/$1/}}_id,
  ${5:${SELECTION}}
) => {
  return dispatch => {
    return callApiCms("$1/" + $1_id, "PUT", {
      $5
    })
      .then(res => {
        dispatch(
          actFetchResourceSuccess({
            message: "Bạn đã cập nhật $2 thành công!",
            confirmTo: "/admin-page/danh-sach-$1"
          })
        );
      })
      .catch(res => {
        const error = res.response.data;
        var message = "Đã có lỗi xảy ra xin vui lòng thử lại sau";
        if (error) {
          message = renderErrorSever(error.message);
        }
        dispatch(
          actFetchResourceFail({
            message: message,
            confirmTo: "/admin-page/sua-${1}/" + ${1}_id
          })
        );
      });
  };
};
//actCreate${2}Request
export const actCreate${2}Request = (name, code, link, img, creater, createdAt) => {
  return dispatch => {
    return callApiCms("${1}", "POST", {
      name,
      code,
      link,
      img,
      creater,
      createdAt
    })
      .then(res => {
        dispatch(
          actFetchResourceSuccess({
            message: "Bạn đã thêm ${2} thành công!",
            confirmTo: "/admin-page/danh-sach-${1}"
          })
        );
      })
      .catch(res => {
        const error = res.response.data;
        var messagec = "Đã có lỗi xảy ra xin vui lòng thử lại sau";
        if (error) {
          messagec = renderErrorSever(error.message);
        }
        dispatch(
          actFetchResourceFail({
            message: messagec,
            confirmTo: "/admin-page/them-${1}"
          })
        );
      });
  };
};
//getList${2}ID
export const actGetList${2}ID = id => {
  return dispatch => {
    return callApiCms(`${1}/detail/` + id, "GET").then(res => {
      dispatch(actGetList${2}IDDp(res));
    });
  };
};
export const actGetList${2}IDDp = ${1}Detail => {
  return {
    type: Types.GET_${3:${1/(.)/\u$1/g}}BYID,
    ${1}Detail
  };
};

//getList${2}
export const actGetList${2} = () => {
  return dispatch => {
    return callApiCms(`${1}/list`, "GET").then(res => {
      dispatch(actGetList${2}Dp(res));
    });
  };
};
export const actGetList${2}Dp = list${2} => {
  return {
    type: Types.GET_LIST${3},
    list${2}
  };
};


]]></content>
    <tabTrigger>q5</tabTrigger>
    <scope>source.js</scope>
    <description>Quick5: Create xxx.action.js</description>
</snippet>